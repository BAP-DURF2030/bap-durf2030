{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { makeObservable, observable, action } from 'mobx'; // import AuthService from '../services/AuthService';\n\nimport User from '../models/User';\n\nvar UiStore = /*#__PURE__*/function () {\n  function UiStore(rootStore) {\n    var _this = this;\n\n    _classCallCheck(this, UiStore);\n\n    _defineProperty(this, \"onAuthStateChanged\", function (user) {\n      if (user) {\n        console.log(\"de user is ingelogd \".concat(user.email));\n\n        _this.setCurrentUser(new User({\n          id: user.uid,\n          name: user.displayName,\n          email: user.email,\n          store: _this.rootStore.userStore,\n          avatar: user.photoURL\n        }));\n      } else {\n        console.log(\"de user is uitgelogd\");\n\n        _this.setCurrentUser(undefined);\n      }\n    });\n\n    this.rootStore = rootStore;\n    this.currentUser = undefined; // this.authService = new AuthService(\n    //   this.rootStore.firebase,\n    //   this.onAuthStateChanged\n    // );\n\n    makeObservable(this, {\n      currentUser: observable,\n      setCurrentUser: action\n    });\n  }\n\n  _createClass(UiStore, [{\n    key: \"setCurrentUser\",\n    // loginUser = async (user) => {\n    //   //service aanspreken\n    //   const result = await this.authService.login(user.email, user.password);\n    //   return result;\n    // };\n    // logoutUser = async () => {\n    //   const result = await this.authService.logout();\n    //   return result;\n    // };\n    // registerUser = async (user) => {\n    //   const result = await this.authService.register(\n    //     user.name,\n    //     user.email,\n    //     user.password,\n    //     user.avatar\n    //   );\n    //   return result;\n    // };\n    value: function setCurrentUser(user) {\n      this.currentUser = user;\n    }\n  }]);\n\n  return UiStore;\n}();\n\nexport default UiStore;","map":{"version":3,"sources":["/Users/sarahvandenberghe/School/Devine/20202021/Bachelorproef/Code/nextjs/src/stores/UiStore.js"],"names":["makeObservable","observable","action","User","UiStore","rootStore","user","console","log","email","setCurrentUser","id","uid","name","displayName","store","userStore","avatar","photoURL","undefined","currentUser"],"mappings":";;;AAAA,SAASA,cAAT,EAAyBC,UAAzB,EAAqCC,MAArC,QAAmD,MAAnD,C,CACA;;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;IAEMC,O;AACJ,mBAAYC,SAAZ,EAAuB;AAAA;;AAAA;;AAAA,gDAcF,UAACC,IAAD,EAAU;AAC7B,UAAIA,IAAJ,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,+BAAmCF,IAAI,CAACG,KAAxC;;AACA,QAAA,KAAI,CAACC,cAAL,CACE,IAAIP,IAAJ,CAAS;AACPQ,UAAAA,EAAE,EAAEL,IAAI,CAACM,GADF;AAEPC,UAAAA,IAAI,EAAEP,IAAI,CAACQ,WAFJ;AAGPL,UAAAA,KAAK,EAAEH,IAAI,CAACG,KAHL;AAIPM,UAAAA,KAAK,EAAE,KAAI,CAACV,SAAL,CAAeW,SAJf;AAKPC,UAAAA,MAAM,EAAEX,IAAI,CAACY;AALN,SAAT,CADF;AASD,OAXD,MAWO;AACLX,QAAAA,OAAO,CAACC,GAAR;;AACA,QAAA,KAAI,CAACE,cAAL,CAAoBS,SAApB;AACD;AACF,KA9BsB;;AACrB,SAAKd,SAAL,GAAiBA,SAAjB;AACA,SAAKe,WAAL,GAAmBD,SAAnB,CAFqB,CAGrB;AACA;AACA;AACA;;AAEAnB,IAAAA,cAAc,CAAC,IAAD,EAAO;AACnBoB,MAAAA,WAAW,EAAEnB,UADM;AAEnBS,MAAAA,cAAc,EAAER;AAFG,KAAP,CAAd;AAID;;;;AAoBD;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;mCAEeI,I,EAAM;AACnB,WAAKc,WAAL,GAAmBd,IAAnB;AACD;;;;;;AAGH,eAAeF,OAAf","sourcesContent":["import { makeObservable, observable, action } from 'mobx';\n// import AuthService from '../services/AuthService';\nimport User from '../models/User';\n\nclass UiStore {\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.currentUser = undefined;\n    // this.authService = new AuthService(\n    //   this.rootStore.firebase,\n    //   this.onAuthStateChanged\n    // );\n\n    makeObservable(this, {\n      currentUser: observable,\n      setCurrentUser: action,\n    });\n  }\n\n  onAuthStateChanged = (user) => {\n    if (user) {\n      console.log(`de user is ingelogd ${user.email}`);\n      this.setCurrentUser(\n        new User({\n          id: user.uid,\n          name: user.displayName,\n          email: user.email,\n          store: this.rootStore.userStore,\n          avatar: user.photoURL,\n        })\n      );\n    } else {\n      console.log(`de user is uitgelogd`);\n      this.setCurrentUser(undefined);\n    }\n  };\n\n  // loginUser = async (user) => {\n  //   //service aanspreken\n  //   const result = await this.authService.login(user.email, user.password);\n  //   return result;\n  // };\n\n  // logoutUser = async () => {\n  //   const result = await this.authService.logout();\n  //   return result;\n  // };\n\n  // registerUser = async (user) => {\n  //   const result = await this.authService.register(\n  //     user.name,\n  //     user.email,\n  //     user.password,\n  //     user.avatar\n  //   );\n  //   return result;\n  // };\n\n  setCurrentUser(user) {\n    this.currentUser = user;\n  }\n}\n\nexport default UiStore;\n"]},"metadata":{},"sourceType":"module"}