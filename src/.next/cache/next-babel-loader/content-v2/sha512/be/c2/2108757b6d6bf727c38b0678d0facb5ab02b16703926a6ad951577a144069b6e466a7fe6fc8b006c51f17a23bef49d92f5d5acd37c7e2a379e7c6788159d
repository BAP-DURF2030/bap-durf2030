{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { makeObservable, observable, action } from 'mobx';\nimport AuthService from '../services/AuthService';\nimport User from '../models/User';\n\nvar UiStore = /*#__PURE__*/function () {\n  function UiStore(rootStore) {\n    var _this = this;\n\n    _classCallCheck(this, UiStore);\n\n    _defineProperty(this, \"onAuthStateChanged\", function (user) {\n      if (user) {\n        console.log(\"de user is ingelogd \".concat(user.email));\n\n        _this.setCurrentUser(new User({\n          id: user.uid,\n          name: user.displayName,\n          email: user.email,\n          store: _this.rootStore.userStore,\n          avatar: user.photoURL\n        }));\n      } else {\n        console.log(\"de user is uitgelogd\");\n\n        _this.setCurrentUser(undefined);\n      }\n    });\n\n    _defineProperty(this, \"loginUser\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(user) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.authService.login(user.email, user.password);\n\n              case 2:\n                result = _context.sent;\n                return _context.abrupt(\"return\", result);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(this, \"logoutUser\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _this.authService.logout();\n\n            case 2:\n              result = _context2.sent;\n              return _context2.abrupt(\"return\", result);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(this, \"registerUser\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(user) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _this.authService.register(user.name, user.email, user.password, user.avatar);\n\n              case 2:\n                result = _context3.sent;\n                return _context3.abrupt(\"return\", result);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    this.rootStore = rootStore;\n    this.currentUser = undefined;\n    this.authService = new AuthService(this.rootStore.firebase, this.onAuthStateChanged);\n    makeObservable(this, {\n      currentUser: observable,\n      setCurrentUser: action\n    });\n  }\n\n  _createClass(UiStore, [{\n    key: \"setCurrentUser\",\n    value: function setCurrentUser(user) {\n      this.currentUser = user;\n    }\n  }]);\n\n  return UiStore;\n}();\n\nexport default UiStore;","map":{"version":3,"sources":["/Users/sarahvandenberghe/School/Devine/20202021/Bachelorproef/Code/nextjs/src/stores/UiStore.js"],"names":["makeObservable","observable","action","AuthService","User","UiStore","rootStore","user","console","log","email","setCurrentUser","id","uid","name","displayName","store","userStore","avatar","photoURL","undefined","authService","login","password","result","logout","register","currentUser","firebase","onAuthStateChanged"],"mappings":";;;;;AAAA,SAASA,cAAT,EAAyBC,UAAzB,EAAqCC,MAArC,QAAmD,MAAnD;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;IAEMC,O;AACJ,mBAAYC,SAAZ,EAAuB;AAAA;;AAAA;;AAAA,gDAWF,UAACC,IAAD,EAAU;AAC7B,UAAIA,IAAJ,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,+BAAmCF,IAAI,CAACG,KAAxC;;AACA,QAAA,KAAI,CAACC,cAAL,CACE,IAAIP,IAAJ,CAAS;AACPQ,UAAAA,EAAE,EAAEL,IAAI,CAACM,GADF;AAEPC,UAAAA,IAAI,EAAEP,IAAI,CAACQ,WAFJ;AAGPL,UAAAA,KAAK,EAAEH,IAAI,CAACG,KAHL;AAIPM,UAAAA,KAAK,EAAE,KAAI,CAACV,SAAL,CAAeW,SAJf;AAKPC,UAAAA,MAAM,EAAEX,IAAI,CAACY;AALN,SAAT,CADF;AASD,OAXD,MAWO;AACLX,QAAAA,OAAO,CAACC,GAAR;;AACA,QAAA,KAAI,CAACE,cAAL,CAAoBS,SAApB;AACD;AACF,KA3BsB;;AAAA;AAAA,0EA6BX,iBAAOb,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEW,KAAI,CAACc,WAAL,CAAiBC,KAAjB,CAAuBf,IAAI,CAACG,KAA5B,EAAmCH,IAAI,CAACgB,QAAxC,CAFX;;AAAA;AAEJC,gBAAAA,MAFI;AAAA,iDAGHA,MAHG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA7BW;;AAAA;AAAA;AAAA;AAAA;;AAAA,8GAmCV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACU,KAAI,CAACH,WAAL,CAAiBI,MAAjB,EADV;;AAAA;AACLD,cAAAA,MADK;AAAA,gDAEJA,MAFI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAnCU;;AAAA;AAAA,2EAwCR,kBAAOjB,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQ,KAAI,CAACc,WAAL,CAAiBK,QAAjB,CAA0BnB,IAAI,CAACO,IAA/B,EAAqCP,IAAI,CAACG,KAA1C,EAAiDH,IAAI,CAACgB,QAAtD,EAAgEhB,IAAI,CAACW,MAArE,CADR;;AAAA;AACPM,gBAAAA,MADO;AAAA,kDAENA,MAFM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAxCQ;;AAAA;AAAA;AAAA;AAAA;;AACrB,SAAKlB,SAAL,GAAiBA,SAAjB;AACA,SAAKqB,WAAL,GAAmBP,SAAnB;AACA,SAAKC,WAAL,GAAmB,IAAIlB,WAAJ,CAAgB,KAAKG,SAAL,CAAesB,QAA/B,EAAyC,KAAKC,kBAA9C,CAAnB;AAEA7B,IAAAA,cAAc,CAAC,IAAD,EAAO;AACnB2B,MAAAA,WAAW,EAAE1B,UADM;AAEnBU,MAAAA,cAAc,EAAET;AAFG,KAAP,CAAd;AAID;;;;mCAoCcK,I,EAAM;AACnB,WAAKoB,WAAL,GAAmBpB,IAAnB;AACD;;;;;;AAGH,eAAeF,OAAf","sourcesContent":["import { makeObservable, observable, action } from 'mobx';\nimport AuthService from '../services/AuthService';\nimport User from '../models/User';\n\nclass UiStore {\n  constructor(rootStore) {\n    this.rootStore = rootStore;\n    this.currentUser = undefined;\n    this.authService = new AuthService(this.rootStore.firebase, this.onAuthStateChanged);\n\n    makeObservable(this, {\n      currentUser: observable,\n      setCurrentUser: action,\n    });\n  }\n\n  onAuthStateChanged = (user) => {\n    if (user) {\n      console.log(`de user is ingelogd ${user.email}`);\n      this.setCurrentUser(\n        new User({\n          id: user.uid,\n          name: user.displayName,\n          email: user.email,\n          store: this.rootStore.userStore,\n          avatar: user.photoURL,\n        })\n      );\n    } else {\n      console.log(`de user is uitgelogd`);\n      this.setCurrentUser(undefined);\n    }\n  };\n\n  loginUser = async (user) => {\n    //service aanspreken\n    const result = await this.authService.login(user.email, user.password);\n    return result;\n  };\n\n  logoutUser = async () => {\n    const result = await this.authService.logout();\n    return result;\n  };\n\n  registerUser = async (user) => {\n    const result = await this.authService.register(user.name, user.email, user.password, user.avatar);\n    return result;\n  };\n\n  setCurrentUser(user) {\n    this.currentUser = user;\n  }\n}\n\nexport default UiStore;\n"]},"metadata":{},"sourceType":"module"}